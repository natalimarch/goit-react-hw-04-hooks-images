{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/SearchImages/SearchImages.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/fields.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","Api/api.js","components/SearchImages/SearchImages.jsx","App.js","index.js"],"names":["module","exports","fields","type","autoComplete","autoFocus","placeholder","name","required","Searchbar","onSubmit","useState","query","setQuery","className","styles","e","preventDefault","trim","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","value","onChange","target","ImageGalleryItem","pageUrl","largeUrl","tags","onPictureOpen","Item","onClick","src","alt","Image","ImageGallery","list","imgList","map","item","webformatURL","largeImageURL","id","List","defaultProps","Button","Btn","Loader","Load","color","height","width","timeout","modal","document","querySelector","Modal","onClose","children","onEsc","code","useEffect","window","addEventListener","removeEventListener","createPortal","Overlay","currentTarget","BASE_URL","API_KEY","fetchImages","queryPicture","page","axios","get","then","res","data","SearchImages","setList","setPage","loading","setLoading","setError","total","setTotal","setLargeImageUrl","showModal","setShowModal","searchFormSubmit","a","hits","makeGallery","scroll","scrollTo","top","documentElement","scrollHeight","behavior","Message","length","Math","ceil","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.025793d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Image\":\"ImageGalleryItem_Image__3YXvD\",\"Item\":\"ImageGalleryItem_Item__WGOL6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\",\"Modal\":\"Modal_Modal__2WBTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ImageGallery_List__138t9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Button_Btn__3Jv1l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Load\":\"Loader_Load__3dI7_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"SearchImages_Message__1tRFk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__DjWH3\",\"SearchForm\":\"Searchbar_SearchForm__1ac2l\",\"SearchFormButton\":\"Searchbar_SearchFormButton__21S85\",\"SearchFormButton-label\":\"Searchbar_SearchFormButton-label__2QH50\",\"SearchFormInput\":\"Searchbar_SearchFormInput__VhsfU\"};","\nexport const fields = {\n    query: {\n        type: \"text\",\n        autoComplete: \"off\",\n        autoFocus: true,\n        placeholder: \"Search images and photos\",\n        name: \"query\",\n        required: true\n    }\n}\n","import { useState } from \"react\";\nimport styles from \"./Searchbar.module.css\";\nimport PropTypes from \"prop-types\";\nimport { fields } from \"./fields\";\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (query.trim() === \"\") {\n      return;\n    }\n    onSubmit(query);\n    setQuery(\"\");\n  };\n\n  const handleChange = ({ target }) => {\n    const { value } = target;\n    // const newValue = type === \"checkbox\" || type === \"radio\" ? checked : value;\n    setQuery(value);\n  };\n\n  return (\n    <header className={styles.Searchbar}>\n      <form onSubmit={handleSubmit} className={styles.SearchForm}>\n        <button type=\"submit\" className={styles.SearchFormButton}>\n          <span className={styles.SearchFormButtonLabel}></span>\n        </button>\n\n        <input\n          {...fields.query}\n          className={styles.SearchFormInput}\n          value={query}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n// class Searchbar extends Component {\n//   state = {\n//     query: \"\",\n//   };\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (this.state.query.trim() === \"\") {\n//       return;\n//     }\n//     this.props.onSubmit(this.state.query);\n//     this.setState({\n//       query: \"\",\n//     });\n//   };\n\n//   handleChange = ({ target }) => {\n//     const { name, value, type, checked } = target;\n//     const newValue = type === \"checkbox\" || type === \"radio\" ? checked : value;\n//     this.setState({\n//       [name]: newValue,\n//     });\n//   };\n\n//   render() {\n//     const { query } = this.state;\n//     const { handleSubmit, handleChange } = this;\n\n//     return (\n//       <header className={styles.Searchbar}>\n//         <form onSubmit={handleSubmit} className={styles.SearchForm}>\n//           <button type=\"submit\" className={styles.SearchFormButton}>\n//             <span className={styles.SearchFormButtonLabel}></span>\n//           </button>\n\n//           <input\n//             {...fields.query}\n//             className={styles.SearchFormInput}\n//             value={query}\n//             onChange={handleChange}\n//           />\n//         </form>\n//       </header>\n//     );\n//   }\n// }\n","import styles from \"../ImageGalleryItem/ImageGalleryItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGalleryItem = ({ pageUrl, largeUrl, tags, onPictureOpen }) => {\n  return (\n    <li\n      className={styles.Item}\n      onClick={() => {\n        onPictureOpen(largeUrl);\n      }}\n    >\n      <img src={pageUrl} alt={tags} className={styles.Image} />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  pageUrl: PropTypes.string.isRequired,\n  largeUrl: PropTypes.string.isRequired,\n  onPictureOpen: PropTypes.func.isRequired,\n  tags: PropTypes.string,\n};\n","import ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport styles from \"../ImageGallery/ImageGallery.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGallery = ({ list, onPictureOpen }) => {\n  const imgList = list.map((item) => {\n    return (\n      <>\n        <ImageGalleryItem\n          key={item.id}\n          pageUrl={item.webformatURL}\n          largeUrl={item.largeImageURL}\n          tags={item.tags}\n          onPictureOpen={onPictureOpen}\n        />\n      </>\n    );\n  });\n\n  return <ul className={styles.List}>{imgList}</ul>;\n};\n\nexport default ImageGallery;\n\nImageGallery.defaultProps = {\n  onPictureOpen: () => {},\n};\n\nImageGallery.propTypes = {\n  list: PropTypes.array.isRequired,\n  onPictureOpen: PropTypes.func,\n};\n","import styles from \"../Button/Button.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ onClick }) => {\n  return (\n    <button onClick={onClick} type=\"button\" className={styles.Btn}>\n      Load more\n    </button>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport LoaderSpin from \"react-loader-spinner\";\n\nimport styles from \"../Loader/Loader.module.css\";\n\nconst Loader = () => {\n  return (\n    <LoaderSpin\n      className={styles.Load}\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000}\n    />\n  );\n};\n// class Loader extends React.Component {\n//   render() {\n\n//   }\n// }\n\nexport default Loader;\n","import styles from \"../Modal/Modal.module.css\";\nimport { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nconst modal = document.querySelector(\"#modal-root\");\n\nconst Modal = ({ onClose, children }) => {\n  const onEsc = (e) => {\n    if (e.code === \"Escape\") {\n      onClose();\n    }\n  };\n\n  const onBackdrop = (e) => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onEsc);\n    return () => {\n      window.removeEventListener(\"keydown\", onEsc);\n    };\n  });\n\n  return createPortal(\n    <div className={styles.Overlay} onClick={onBackdrop}>\n      <div className={styles.Modal}>{children}</div>\n    </div>,\n    modal\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n// class Modal extends Component {\n//   componentDidMount() {\n//     window.addEventListener(\"keydown\", this.onEsc);\n//   }\n\n//   componentWillUnmount() {\n//     window.removeEventListener(\"keydown\", this.onEsc);\n//   }\n\n//   onEsc = (e) => {\n//     if (e.code === \"Escape\") {\n//       this.props.onClose();\n//     }\n//   };\n\n//   onBackdrop = (e) => {\n//     if (e.currentTarget === e.target) {\n//       this.props.onClose();\n//     }\n//   };\n\n//   render() {\n//     const { children } = this.props;\n//     return createPortal(\n//       <div className={styles.Overlay} onClick={this.onBackdrop}>\n//         <div className={styles.Modal}>{children}</div>\n//       </div>,\n//       modal\n//     );\n//   }\n// }\n","\nimport axios from \"axios\";\n\nconst BASE_URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"23365989-0313fa8d36a360eb60645d2f6\";\n\nexport const fetchImages = (queryPicture, page = 1) => {\n  return axios\n    .get(\n      `${BASE_URL}?q=${queryPicture}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n    )\n    .then((res) => res.data);\n};\n\n\n\n\n\n\n// import axios from \"axios\";\n\n// const instance = axios.create({\n//   baseURL: \"https://pixabay.com/\",\n//   params: {\n//     key: \"23365989-0313fa8d36a360eb60645d2f6\"\n//   }\n// });\n\n// const createParams = (params) => {\n//   return {\n//     params,\n//   };\n// };\n\n// export const getAllImages = async () => {\n//   return instance.get(\"/api/\");\n// };\n// export const getImages = async (\n//   {query,\n//   image_type = \"photo\",\n//   orientation = \"horizontal\",\n//   page = 1,\n//   per_page = 12}\n// ) => {\n//   return instance.get(\n//     \"/api/\",\n//     createParams({ q: query, image_type, orientation, per_page, page })\n//   );\n// };","import { useState } from \"react\";\n\nimport Searchbar from \"../Searchbar/Searchbar\";\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\nimport Button from \"../Button/Button\";\nimport Loader from \"../Loader/Loader\";\nimport Modal from \"../Modal/Modal\";\n\nimport { fetchImages } from \"../../Api/api\";\n\nimport styles from \"../SearchImages/SearchImages.module.css\";\n\n// const useGetPrevValue = (value) => {\n//   const prevValue = useRef();\n//   useEffect(() => {\n//     prevValue.current = value;\n//   });\n//   return prevValue.current;\n// };\n\nconst SearchImages = () => {\n  const [list, setList] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [query, setQuery] = useState(\"\");\n  const [total, setTotal] = useState(0);\n  const [largeImageURL, setLargeImageUrl] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n\n  const searchFormSubmit = async (query) => {\n    setQuery(query);\n    setLoading(true);\n    setList([]);\n    setPage(1);\n\n    try {\n      const data = await fetchImages(query, 1);\n      const { hits, total } = data;\n      setList((list) => [...list, ...hits]);\n      setPage((page) => page + 1);\n      setTotal(total);\n      setLoading(false);\n    } catch (error) {\n      setError(error);\n      setLoading(false);\n    }\n  };\n\n  const makeGallery = async () => {\n    try {\n      const data = await fetchImages(query, page);\n      const { hits, total } = data;\n      setList((list) => [...list, ...hits]);\n      setPage((page) => page + 1);\n      setTotal(total);\n      setLoading(false);\n\n      if (page !== 1) {\n        scroll();\n      }\n    } catch (error) {\n      setError(error);\n      setLoading(false);\n    }\n  };\n\n  // useEffect(() => {\n  //   if (page !== 1) {\n  //     scroll();\n  //   }\n  // }, [page]);\n\n  // console.log(\"query\", query);\n  // const prevQuery = useGetPrevValue(query);\n  // console.log(prevQuery);\n\n  // useEffect(() => {\n  //   if (prevQuery !== query) {\n  //     setList([]);\n  //     setLoading(true);\n\n  //     makeGallery();\n  //     // return;\n  //   }\n  // }, [makeGallery, prevQuery, query]);\n\n  const scroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  const showBtnLoadMore = () => {\n    return Math.ceil(total / 12) !== page - 1;\n  };\n\n  const onPictureOpen = (largeUrl) => {\n    setLargeImageUrl(largeUrl);\n    setShowModal(true);\n  };\n\n  const changeModal = () => {\n    setShowModal((showModal) => !showModal);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={searchFormSubmit} />\n      {total === 0 && <p className={styles.Message}>There are no pictures!</p>}\n      {list.length > 0 && (\n        <ImageGallery list={list} onPictureOpen={onPictureOpen} />\n      )}\n      {loading && <Loader />}\n      {showModal && (\n        <Modal onClose={changeModal}>\n          <img alt=\"#\" src={largeImageURL} />\n        </Modal>\n      )}\n      {showBtnLoadMore() > 0 && total > 0 && <Button onClick={makeGallery} />}\n    </>\n  );\n};\n\nexport default SearchImages;\n// class SearchImages extends Component {\n//   state = {\n//     list: [],\n//     page: 1,\n//     loading: false,\n//     error: null,\n//     query: \"\",\n//     total: 0,\n//     largeImageURL: \"\",\n//     showModal: false,\n//   };\n\n//   searchFormSubmit = (query) => {\n//     this.setState({\n//       query,\n//       loading: true,\n//       page: 1,\n//     });\n//   };\n\n//   componentDidUpdate(_, prevState) {\n//     if (prevState.query !== this.state.query) {\n//       this.setState({\n//         list: [],\n//         isLoading: true,\n//       });\n//       this.makeGallery();\n//       return;\n//     }\n//   }\n\n//   makeGallery = async () => {\n//     const { query, page } = this.state;\n\n//     try {\n//       const data = await fetchImages(query, page);\n//       const { hits, total } = data;\n//       this.setState(({ list, page }) => ({\n//         list: [...list, ...hits],\n//         page: page + 1,\n//         total,\n//         isLoading: false,\n//       }));\n//       if (page !== 1) {\n//         this.scroll();\n//       }\n\n//       // if (!total) {\n//       //   alert(\"There are no pictures\");\n//       // }\n//     } catch (error) {\n//       this.setState({ error, isLoading: false });\n//     }\n//   };\n\n//   scroll = () => {\n//     window.scrollTo({\n//       top: document.documentElement.scrollHeight,\n//       behavior: \"smooth\",\n//     });\n//   };\n\n//   showBtnLoadMore = () => {\n//     return Math.ceil(this.state.total / 12) !== this.state.page - 1;\n//   };\n\n//   onPictureOpen = (largeUrl) => {\n//     this.setState({ largeImageURL: largeUrl, showModal: true });\n//   };\n\n//   changeModal = () => {\n//     this.setState(({ showModal }) => ({\n//       showModal: !showModal,\n//     }));\n//   };\n\n//   render() {\n//     const { list, total, isLoading, showModal, largeImageURL } = this.state;\n//     const { searchFormSubmit, makeGallery, onPictureOpen, changeModal } = this;\n\n//     return (\n//       <>\n//         <Searchbar onSubmit={searchFormSubmit} />\n//         {!total && <p className={styles.Message}>There are no pictures!</p>}\n//         {Boolean(list.length) && (\n//           <ImageGallery list={list} onPictureOpen={onPictureOpen} />\n//         )}\n//         {isLoading && <Loader />}\n//         {showModal && (\n//           <Modal onClose={changeModal}>\n//             <img src={largeImageURL} />\n//           </Modal>\n//         )}\n//         {this.showBtnLoadMore() && total && <Button onClick={makeGallery} />}\n//       </>\n//     );\n//   }\n// }\n\n// async componentDidMount() {\n//   this.setState({ loading: true });\n//   this.fetchImages();\n// }\n\n// async fetchImages() {\n//   const { page, query, list } = this.state;\n//   try {\n//     const { data } = await getImages({ page, query });\n//     console.log(data.hits);\n//     this.setState((prevState) => ({\n//       list: [...list, ...data.hits],\n//       error: null,\n//       loading: false,\n//       page: prevState.page + 1,\n//       total: data.total,\n//     }));\n//   } catch (error) {\n//     this.setState({ error, loading: false });\n//   }\n// }\n\n// async componentDidUpdate() {\n//   const { loading, page } = this.state;\n\n//   if (loading && page > 1) {\n//     this.fetchImages();\n//   }\n// }\n","import './App.css';\nimport SearchImages from \"../src/components/SearchImages/SearchImages\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchImages />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}